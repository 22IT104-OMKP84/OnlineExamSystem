@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Question Management";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Question Management</h5>
                <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addQuestionModal">
                    Add New Question
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Question ID</th>
                                <th>Question Text</th>
                                <th>Subject</th>
                                <th>Type</th>
                                <th>Difficulty</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.Questions != null)
                            {
                                @foreach (var question in ViewBag.Questions)
                                {
                                    <tr>
                                        <td>Q@(question.Id.ToString("D3"))</td>
                                        <td>@question.QuestionText</td>
                                        <td>@question.Subject</td>
                                        <td><span class="badge bg-info">@question.Type</span></td>
                                        <td>
                                            @{
                                                var difficultyClass = question.Difficulty switch
                                                {
                                                    "Easy" => "bg-success",
                                                    "Medium" => "bg-warning",
                                                    "Hard" => "bg-danger",
                                                    _ => "bg-secondary"
                                                };
                                            }
                                            <span class="badge @difficultyClass">@question.Difficulty</span>
                                        </td>
                                        <td><span class="badge bg-success">@question.Status</span></td>
                                        <td>
                                            <button class="btn btn-sm btn-outline-primary" onclick="editQuestion(@question.Id)">Edit</button>
                                            <form method="post" action="@Url.Action("DeleteQuestion", "Admin")" style="display: inline;">
                                                <input type="hidden" name="id" value="@question.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this question?')">Delete</button>
                                            </form>
                                            <form method="post" action="@Url.Action("UpdateQuestionStatus", "Admin")" style="display: inline;">
                                                <input type="hidden" name="id" value="@question.Id" />
                                                <input type="hidden" name="status" value="@(question.Status == "Active" ? "Inactive" : "Active")" />
                                                <button type="submit" class="btn btn-sm btn-outline-secondary">
                                                    @(question.Status == "Active" ? "Deactivate" : "Activate")
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Question Modal -->
<div class="modal fade" id="addQuestionModal" tabindex="-1" aria-labelledby="addQuestionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addQuestionModalLabel">Add New Question</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" action="@Url.Action("AddQuestion", "Admin")">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label for="questionText" class="form-label">Question Text</label>
                            <textarea class="form-control" id="questionText" name="questionText" rows="3" required></textarea>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="subject" class="form-label">Subject</label>
                            <select class="form-select" id="subject" name="subject" required>
                                <option value="">Select Subject</option>
                                @if (ViewBag.Subjects != null)
                                {
                                    @foreach (var subject in ViewBag.Subjects)
                                    {
                                        <option value="@subject">@subject</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">Question Type</label>
                            <select class="form-select" id="type" name="type" required onchange="toggleOptions()">
                                <option value="">Select Type</option>
                                @if (ViewBag.QuestionTypes != null)
                                {
                                    @foreach (var type in ViewBag.QuestionTypes)
                                    {
                                        <option value="@type">@type</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="difficulty" class="form-label">Difficulty</label>
                            <select class="form-select" id="difficulty" name="difficulty" required>
                                <option value="">Select Difficulty</option>
                                @if (ViewBag.DifficultyLevels != null)
                                {
                                    @foreach (var difficulty in ViewBag.DifficultyLevels)
                                    {
                                        <option value="@difficulty">@difficulty</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-12 mb-3" id="optionsSection" style="display: none;">
                            <label class="form-label">Options (for MCQ)</label>
                            <div id="optionsContainer">
                                <div class="row mb-2">
                                    <div class="col-md-10">
                                        <input type="text" class="form-control" name="options" placeholder="Option 1" />
                                    </div>
                                    <div class="col-md-2">
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="addOption()">Add Option</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 mb-3">
                            <label for="correctAnswer" class="form-label">Correct Answer</label>
                            <input type="text" class="form-control" id="correctAnswer" name="correctAnswer" required />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Question</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
function toggleOptions() {
    const type = document.getElementById('type').value;
    const optionsSection = document.getElementById('optionsSection');
    
    if (type === 'MCQ') {
        optionsSection.style.display = 'block';
    } else {
        optionsSection.style.display = 'none';
    }
}

function addOption() {
    const container = document.getElementById('optionsContainer');
    const optionCount = container.children.length + 1;
    
    const optionDiv = document.createElement('div');
    optionDiv.className = 'row mb-2';
    optionDiv.innerHTML = `
        <div class="col-md-10">
            <input type="text" class="form-control" name="options" placeholder="Option ${optionCount}" />
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeOption(this)">Remove</button>
        </div>
    `;
    
    container.appendChild(optionDiv);
}

function removeOption(button) {
    button.closest('.row').remove();
}

function editQuestion(id) {
    // TODO: Implement edit functionality
    alert('Edit functionality will be implemented in the next update');
}
</script>
